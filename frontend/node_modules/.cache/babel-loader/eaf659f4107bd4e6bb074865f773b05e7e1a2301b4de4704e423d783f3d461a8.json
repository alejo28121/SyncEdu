{"ast":null,"code":"import'../../assets/dashboardStyles/schedule.css';import{jwtDecode}from'jwt-decode';import{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Schedule(){const dates=jwtDecode(localStorage.getItem('token'));const code=dates.institution;const[scheduleDate,setScheduleData]=useState([]);const initialCells=73;useEffect(()=>{const requestSchedule=async()=>{try{const response=await fetch(`http://${process.env.REACT_APP_BACKEND_URL}:${process.env.REACT_APP_BACKEND_PORT}/schedule`,{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify({type:'1',grade:'uni',code:'SCHL04'})});if(response.status===200){const schedule=await response.json();console.log(schedule);setScheduleData(schedule);}else{console.log('codigo invalido');}}catch(error){console.error(\"error en la solicitud: \",error);}};requestSchedule();},[code]);const total=scheduleDate.reduce((counter,hour)=>counter+parseInt(hour.duration,10),0);const counterCells=initialCells-total;const colors=[\"#fdb15a\",\"#ff67c9\",\"#00c6c3\",\"#7b88f2\",\"#3dd99b\",\"#ff8984\",\"#b881f8\"];let useSubjects=[];function SearchSubject(subject){const index=useSubjects.indexOf(subject);if(index>=0){return colors[index];}else{useSubjects.push(subject);return colors[useSubjects.length-1];}};return/*#__PURE__*/_jsx(\"div\",{className:\"Schedule-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"Main-hour-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Left-hour-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\",children:\"7:00\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\",children:\"9:00\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\",children:\"11:00\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\",children:\"13:00\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\",children:\"15:00\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\",children:\"17:00\"}),/*#__PURE__*/_jsx(\"span\",{className:\"Span-hour\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Top-hour-container\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Lunes\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Martes\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Miercoles\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Jueves\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Viernes\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Sabado\"})]}),scheduleDate.map((hour,index)=>{const getGridRowFromTime=time=>{const baseHour=6;const hour=parseInt(time.split(\":\")[0],10);return hour-baseHour+2;};const weekDays={Lunes:2,Martes:3,Miercoles:4,Jueves:5,Viernes:6,Sabado:7};return/*#__PURE__*/_jsxs(\"div\",{className:\"Hour-container1\",style:{gridColumn:`${weekDays[hour.weekDay]} / span 1`,gridRow:`${getGridRowFromTime(hour.startDayTime)} / span ${parseInt(hour.duration,10)}`,backgroundColor:SearchSubject(hour.Subject)},children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-dates-subject\",children:hour.Subject}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-dates-hour\",children:[hour.startDayTime.slice(0,5),\"-\",hour.endDayTime.slice(0,5)]})]},index);}),Array.from({length:counterCells}).map((_,i)=>{return/*#__PURE__*/_jsx(\"div\",{className:\"Hour-container\"},i);})]})});}export default Schedule;","map":{"version":3,"names":["jwtDecode","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Schedule","dates","localStorage","getItem","code","institution","scheduleDate","setScheduleData","initialCells","requestSchedule","response","fetch","process","env","REACT_APP_BACKEND_URL","REACT_APP_BACKEND_PORT","method","headers","body","JSON","stringify","type","grade","status","schedule","json","console","log","error","total","reduce","counter","hour","parseInt","duration","counterCells","colors","useSubjects","SearchSubject","subject","index","indexOf","push","length","className","children","map","getGridRowFromTime","time","baseHour","split","weekDays","Lunes","Martes","Miercoles","Jueves","Viernes","Sabado","style","gridColumn","weekDay","gridRow","startDayTime","backgroundColor","Subject","slice","endDayTime","Array","from","_","i"],"sources":["C:/Users/graja/OneDrive/Documentos/Proyectos/syncedu/frontend/src/components/dashboardCom/schedule.js"],"sourcesContent":["import '../../assets/dashboardStyles/schedule.css';\r\nimport {jwtDecode} from 'jwt-decode';\r\nimport {useEffect, useState} from 'react';\r\n\r\nfunction Schedule (){\r\n    const dates = jwtDecode(localStorage.getItem('token'));\r\n    const code = dates.institution;\r\n    const [scheduleDate, setScheduleData] = useState([]);\r\n    const initialCells = 73;\r\n    useEffect(() => {\r\n            const requestSchedule = async () => {\r\n            try{\r\n                const response = await fetch(`http://${process.env.REACT_APP_BACKEND_URL}:${process.env.REACT_APP_BACKEND_PORT}/schedule`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'content-type' : 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        type: '1',\r\n                        grade: 'uni',\r\n                        code: 'SCHL04',\r\n                    })\r\n                });\r\n                if(response.status === 200){\r\n                    const schedule = await response.json();\r\n                    console.log(schedule);\r\n                    setScheduleData(schedule);\r\n                }else{\r\n                    console.log('codigo invalido');\r\n                }\r\n            }\r\n            catch(error){\r\n                console.error(\"error en la solicitud: \", error);\r\n            }\r\n        };\r\n        requestSchedule();\r\n    }, [code]);\r\n    const total = scheduleDate.reduce((counter, hour) => counter + parseInt(hour.duration, 10), 0);\r\n    const counterCells = initialCells - total;\r\n    const colors = [\"#fdb15a\", \"#ff67c9\", \"#00c6c3\", \"#7b88f2\", \"#3dd99b\", \"#ff8984\", \"#b881f8\"];\r\n    let useSubjects = [];\r\n    function SearchSubject(subject){\r\n        const index = useSubjects.indexOf(subject);\r\n        if(index >= 0){\r\n            return colors[index];\r\n        }\r\n        else{\r\n            useSubjects.push(subject);\r\n            return colors[useSubjects.length - 1];\r\n        }\r\n    };\r\n    return(\r\n        <div className='Schedule-container'>\r\n            <div className='Main-hour-container'>\r\n                <div className='Left-hour-container'>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>7:00</span>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>9:00</span>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>11:00</span>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>13:00</span>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>15:00</span>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>17:00</span>\r\n                    <span className='Span-hour'></span>\r\n                </div>\r\n                <div className='Top-hour-container'>\r\n                    <span>Lunes</span>\r\n                    <span>Martes</span>\r\n                    <span>Miercoles</span>\r\n                    <span>Jueves</span>\r\n                    <span>Viernes</span>\r\n                    <span>Sabado</span>\r\n                </div>\r\n                {scheduleDate.map((hour, index) => {\r\n                    const getGridRowFromTime = (time) => {\r\n                        const baseHour = 6; \r\n                        const hour = parseInt(time.split(\":\")[0], 10);\r\n                        return hour - baseHour + 2;\r\n                    };\r\n                    const weekDays = {\r\n                        Lunes: 2,\r\n                        Martes: 3,\r\n                        Miercoles: 4,\r\n                        Jueves: 5,\r\n                        Viernes: 6,\r\n                        Sabado: 7,\r\n                    };\r\n                    return(\r\n                        <div key={index} className='Hour-container1' style={{\r\n                                gridColumn: `${weekDays[hour.weekDay]} / span 1`,\r\n                                gridRow: `${getGridRowFromTime(hour.startDayTime)} / span ${parseInt(hour.duration, 10)}`,\r\n                                backgroundColor: SearchSubject(hour.Subject)\r\n                            }}>\r\n                            <span className='text-dates-subject'>{hour.Subject}</span>\r\n                            <span className='text-dates-hour'>{hour.startDayTime.slice(0, 5)}-{hour.endDayTime.slice(0,5)}</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n                {Array.from({length: counterCells}).map((_, i) => {\r\n                    return <div key={i} className='Hour-container'></div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Schedule;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}