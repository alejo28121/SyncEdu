{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\graja\\\\OneDrive\\\\Documentos\\\\Proyectos\\\\syncedu\\\\frontend\\\\src\\\\components\\\\schedule.js\",\n  _s = $RefreshSig$();\nimport '../assets/schedule.css';\nimport { jwtDecode } from 'jwt-decode';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Schedule() {\n  _s();\n  const dates = jwtDecode(localStorage.getItem('token'));\n  const code = dates.institution;\n  const [scheduleDate, setScheduleData] = useState([]);\n  const weekDays = {\n    Lunes: 2,\n    Martes: 3,\n    Miércoles: 4,\n    Jueves: 5,\n    Viernes: 6,\n    Sábado: 7\n  };\n  useEffect(() => {\n    const requestSchedule = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/schedule', {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            type: '1',\n            grade: '6',\n            code: code\n          })\n        });\n        if (response.status === 200) {\n          const schedule = await response.json();\n          console.log(schedule);\n          setScheduleData(schedule);\n        } else {\n          console.log('codigo invalido');\n        }\n      } catch (error) {\n        console.error(\"error en la solicitud: \", error);\n      }\n    };\n    requestSchedule();\n  }, [code]);\n  console.log('schedule:', scheduleDate);\n  const getGridRowFromTime = time => {\n    const baseHour = 7; // Hora de inicio de tu grid (07:00:00)\n    const hour = parseInt(time.split(\":\")[0], 10);\n    return hour - baseHour + 1; // +1 porque quieres filas de 1 a 13\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Schedule-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main-hour-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Left-hour-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\",\n          children: \"7:00 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\",\n          children: \"9:00 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\",\n          children: \"11:00 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\",\n          children: \"1:00 PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\",\n          children: \"3:00 PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\",\n          children: \"5:00 PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Span-hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Top-hour-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Lunes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Martes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Miercoles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Jueves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Viernes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Sabado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), scheduleDate.map((hour, index) => {\n        console.log(hour.Subject);\n        console.log(index);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Hour-container1\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-dates\",\n            style: {\n              gridColumn: `${weekDays[hour.weekDay]} / span 1`,\n              gridRow: `${hour.duration} / span ${hour.duration}`\n            },\n            children: hour.Subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Schedule, \"1eWz8S0E2uVy1xLsku6ZWTDERDc=\");\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["jwtDecode","useEffect","useState","jsxDEV","_jsxDEV","Schedule","_s","dates","localStorage","getItem","code","institution","scheduleDate","setScheduleData","weekDays","Lunes","Martes","Miércoles","Jueves","Viernes","Sábado","requestSchedule","response","fetch","method","headers","body","JSON","stringify","type","grade","status","schedule","json","console","log","error","getGridRowFromTime","time","baseHour","hour","parseInt","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Subject","style","gridColumn","weekDay","gridRow","duration","_c","$RefreshReg$"],"sources":["C:/Users/graja/OneDrive/Documentos/Proyectos/syncedu/frontend/src/components/schedule.js"],"sourcesContent":["import '../assets/schedule.css';\r\nimport {jwtDecode} from 'jwt-decode';\r\nimport {useEffect, useState} from 'react';\r\n\r\nfunction Schedule (){\r\n    const dates = jwtDecode(localStorage.getItem('token'));\r\n    const code = dates.institution;\r\n    const [scheduleDate, setScheduleData] = useState([]);\r\n    const weekDays = {\r\n        Lunes: 2,\r\n        Martes: 3,\r\n        Miércoles: 4,\r\n        Jueves: 5,\r\n        Viernes: 6,\r\n        Sábado: 7,\r\n    };\r\n    useEffect(() => {\r\n            const requestSchedule = async () => {\r\n            try{\r\n                const response = await fetch('http://localhost:5000/schedule', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'content-type' : 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        type: '1',\r\n                        grade: '6',\r\n                        code: code,\r\n                    })\r\n                });\r\n                if(response.status === 200){\r\n                    const schedule = await response.json();\r\n                    console.log(schedule);\r\n                    setScheduleData(schedule);\r\n                }else{\r\n                    console.log('codigo invalido');\r\n                }\r\n            }\r\n            catch(error){\r\n                console.error(\"error en la solicitud: \", error);\r\n            }\r\n        };\r\n        requestSchedule();\r\n    }, [code]);\r\n    console.log('schedule:', scheduleDate);\r\n    const getGridRowFromTime = (time) => {\r\n  const baseHour = 7; // Hora de inicio de tu grid (07:00:00)\r\n  const hour = parseInt(time.split(\":\")[0], 10);\r\n  return hour - baseHour + 1; // +1 porque quieres filas de 1 a 13\r\n};\r\n    return(\r\n        <div className='Schedule-container'>\r\n            <div className='Main-hour-container'>\r\n                <div className='Left-hour-container'>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>7:00 AM</span>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>9:00 AM</span>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>11:00 AM</span>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>1:00 PM</span>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>3:00 PM</span>\r\n                    <span className='Span-hour'></span>\r\n                    <span className='Span-hour'>5:00 PM</span>\r\n                    <span className='Span-hour'></span>\r\n                </div>\r\n                <div className='Top-hour-container'>\r\n                    <span>Lunes</span>\r\n                    <span>Martes</span>\r\n                    <span>Miercoles</span>\r\n                    <span>Jueves</span>\r\n                    <span>Viernes</span>\r\n                    <span>Sabado</span>\r\n                </div>\r\n                {scheduleDate.map((hour, index) => {\r\n                    console.log(hour.Subject);\r\n                    console.log(index);\r\n                    return(\r\n                        <div key={index} className='Hour-container1'>\r\n                            <span className='text-dates' style={{\r\n                                gridColumn: `${weekDays[hour.weekDay]} / span 1`,\r\n                                gridRow: `${hour.duration} / span ${hour.duration}`\r\n                            }}>{hour.Subject}</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Schedule;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}